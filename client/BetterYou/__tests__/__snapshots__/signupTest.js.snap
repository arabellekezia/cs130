// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup Form renders correctly 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "flex": 1,
    }
  }
  keyboardShouldPersistTaps="handled"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Array [
            Object {},
            Object {
              "alignSelf": "flex-start",
              "fontSize": 34,
              "marginBottom": "5%",
              "marginLeft": "5%",
            },
          ]
        }
      >
        Let's get started!
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "#efefef",
            "borderRadius": 10,
            "flexDirection": "row",
            "marginVertical": 10,
            "padding": 15,
            "width": "90%",
          }
        }
      >
        <Text />
        <TextInput
          allowFontScaling={true}
          maxLength={25}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Full name"
          rejectResponderTermination={true}
          style={
            Object {
              "fontSize": 18,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#efefef",
            "borderRadius": 10,
            "flexDirection": "row",
            "marginVertical": 10,
            "padding": 15,
            "width": "90%",
          }
        }
      >
        <Text />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          keyboardType="email-address"
          maxLength={25}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Email"
          rejectResponderTermination={true}
          style={
            Object {
              "fontSize": 18,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#efefef",
            "borderRadius": 10,
            "flexDirection": "row",
            "marginVertical": 10,
            "padding": 15,
            "width": "90%",
          }
        }
      >
        <Text />
        <TextInput
          allowFontScaling={true}
          maxLength={25}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Password"
          rejectResponderTermination={true}
          secureTextEntry={true}
          style={
            Object {
              "fontSize": 18,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#efefef",
            "borderRadius": 10,
            "flexDirection": "row",
            "marginVertical": 10,
            "padding": 15,
            "width": "90%",
          }
        }
      >
        <Text />
        <TextInput
          allowFontScaling={true}
          maxLength={25}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Confirm password"
          rejectResponderTermination={true}
          secureTextEntry={true}
          style={
            Object {
              "fontSize": 18,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#007AFF",
              "borderRadius": 10,
              "justifyContent": "center",
              "marginVertical": 12,
              "minWidth": "90%",
              "paddingHorizontal": 30,
              "paddingVertical": 12,
            }
          }
        >
          <Text
            style={
              Array [
                Object {},
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "fontWeight": "600",
                },
              ]
            }
          >
            Sign Up
          </Text>
        </View>
      </View>
      <Text
        style={
          Object {
            "marginVertical": "5%",
          }
        }
      >
        Already have an account?
        <Text
          onPress={[Function]}
          style={
            Object {
              "color": "#0079d3",
            }
          }
        >
           Log in!
        </Text>
      </Text>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;
